open Std
open Stream_arrays
open Downscale


(*open Image*)

type pixel = int^3

(*
node main() = (t:int^3^6;y:int^3^3)
(*var t:int^4; c :bool;*)
let
  t = ([1,1,1]^6) fby ([2,2,2]^6) fby ([3,3,3]^6) fby t;
  y = down_line<<6,2>>(t);
tel
*)


const image :string = "../img1.png"
node main (*<<image :string>>*) () = (finished :bool)
var i, o :pixel; in_array :pixel^1920; out_array :pixel^(1920); ck :bool;
let
  i = 0^3 (*Image.read_int<<image>>()*);
  ck = timer<<1920>>();
  in_array = s2a_pixel<<1920>>(i, ck);
  out_array = down_line<<1920,1>>(in_array);
  (* skip first dummy values
  ok = wait<<1920>>();*)
(*  o = a2s_pixel<<1920/2>>(out_array,ck);*)
  o = a2s_pixel<<1920>>(out_array,ck);
  finished = true (*Image.write_int<<"bonjour.png", 1920,1080>>(o)*);
tel
