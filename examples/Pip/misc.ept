
(** Counters *)

(* count from 0 to n-1 *)
node mod_counter<<n :int>>() = (cpt :int)
let
  reset
    cpt = 0 fby (cpt + 1)
  every (false fby (cpt = n-1))
tel

(* count from 0 to n-1, reset to 0 when [res] *)
node mod_counter_r<<n :int>>(res :bool) = (cpt :int)
let
  reset
    cpt = 0 fby (cpt + 1)
  every (res or (false fby (cpt = n-1)))
tel


(** Timers *)

node timer<<n :int>>() = (t :bool)
let
  t = mod_counter<<n>>() = 0;
tel



(** Clock manipulations *)

node current_i<<ini :int>>(x : int; ck : bool) = (y :int)
let
  y = merge ck (x) ((ini fby y) whenot ck)
tel

node current_ai<<n :int; ini :int^n>>(x :int^n; ck :bool) = (y :int^n)
let
  y = merge ck (x) ((ini fby y) whenot ck)
tel
