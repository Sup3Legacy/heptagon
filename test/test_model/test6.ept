
(* Third test of undefined phase - Assume minimal example *)


(* Elementary functions (dummy) *)
fun node_000001 (a : int; b : int) returns (c: int; d: int; e: int)
let 
	c = a;
	d = b;
	e = a+b;
tel

fun node_000002 (a : int; b : int) returns (c: int; d: int; e: int; f: int)
let 
	c = a;
	d = b;
	e = a+b;
	f = a*b;
tel

fun node_000003 (a : int) returns (c: int)
let 
	c = 2*a;
tel

fun node_000004 (a : int; b : int) returns (c: int)
let 
	c = a+3*b;
tel

fun node_000005 (a : int) returns (c: int)
let 
	c = 3*a;
tel

fun node_000006 (a : int; b : int) returns (c: int)
let 
	c = 2*a + b;
tel


model main(data_9:int) returns (data_10 : int; data_11B : int)
var
	data_0 : int :: [..,1];   (* C1 *)
	data_1 : int :: [..,1];   (* C1 *)
	data_2 : int :: [..,1];   (* C1 *)
	data_3 : int :: [..,2];   (* C2 *)
	data_4 : int :: [..,2];   (* C2 *)
	data_5 : int :: [..,2];   (* C2 *)
	data_6 : int :: [..,2];   (* C2 *)
	data_7 : int :: [..,12];  (* C4 *)
	data_8 : int :: [..,12];  (* C4 *)
	data_11 : int :: [..,4];  (* C3 *)
let
	(data_0, data_1, data_2) = buffer node_000001(
			buffer data_9,
			buffer (0 fby data_0)
		);
	(data_3, data_4, data_5, data_6) = buffer node_000002(
			buffer (0 fby data_4),
			buffer ((buffer data_2) when [0,2])
		);
	data_7 = buffer node_000003(
			(buffer (0 fby data_5)) when [1,6]
		);
	data_10 = buffer node_000004(
			buffer (current([0,2], 0, buffer data_3)),
			buffer data_1
		);
	data_8 = buffer node_000005(buffer data_7);
	data_11 = buffer node_000006(
			buffer current([1,3], 0, buffer data_8),
			buffer (data_6 when [1,2])
		);
	data_11B = buffer current([2,4], 0, buffer data_11);
tel


(* === MINIMAL EXAMPLE (from Assume repository - old notations) ===
node main (data_9 : int :: C1_0)
returns (data_11 : int :: C3_2;
	data_10 : int :: C1_0)
var
	data_8 : int :: C4_3;
	data_7 : int :: C4_2;
	data_6 : int :: C2_0;
	data_5 : int :: C2_0;
	data_4 : int :: C2_0;
	data_3 : int :: C2_0;
	data_2 : int :: C1_0;
	data_1 : int :: C1_0;
	data_0 : int :: C1_0;
let
	(data_0, data_1, data_2) = Node_000001( data_9, pre(data_0) );
	(data_3, data_4, data_5, data_6) = Node_000002( pre(data_4), data_2 when C2_0 );
	(data_7) = Node_000003( pre(data_5) when C4_2 );
	(data_10) = Node_000004( current(C1_0, data_3), data_1 );
	(data_8) = Node_000005( buffer(C4_2, C4_3, data_7) );
	(data_11) = Node_000006( buffer(C3_3, C3_2, current(C3_3, data_8) ), data_6 when C3_2 );
tel
*)
