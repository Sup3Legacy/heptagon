
(* Fifth test of unspecified operators - testing causality loops with fby? and bufferfby? *)
(* This program contains exactly the information corresponding to a graph of dependence
	between tasks, with no information whatsoever about the data sampled *)

(* ../../heptc -v -noconstrbuffby -genphconstr constr_test17.txt test17.ept *)


(* Elementary functions (dummy) *)
fun node_000001 (a : int; b : int) returns (c: int; d: int; e: int)
let 
	c = a;
	d = b;
	e = a+b;
tel

fun node_000002 (a : int; b : int) returns (c: int; d: int; e: int; f: int)
let 
	c = a;
	d = b;
	e = a+b;
	f = a*b;
tel

fun node_000003 (a : int) returns (c: int)
let 
	c = 2*a;
tel

fun node_000004 (a : int; b : int) returns (c: int)
let 
	c = a+3*b;
tel

fun node_000005 (a : int) returns (c: int)
let 
	c = 3*a;
tel

fun node_000006 (a : int; b : int) returns (c: int)
let 
	c = 2*a + b;
tel


model main(data_9:int) returns (data_10 : int; data_11B : int)
var
	data_0 : int :: [..,1];   (* C1 *)
	data_1 : int :: [..,1];   (* C1 *)
	data_2 : int :: [..,1];   (* C1 *)
	data_3 : int :: [..,2];   (* C2 *)
	data_4 : int :: [..,2];   (* C2 *)
	data_5 : int :: [..,2];   (* C2 *)
	data_6 : int :: [..,2];   (* C2 *)
	data_7 : int :: [..,12];  (* C4 *)
	data_8 : int :: [..,12];  (* C4 *)
	data_11 : int :: [..,4];  (* C3 *)
let
	(data_0, data_1, data_2) = node_000001(
			(0 bufferfby? data_9),
			(0 bufferfby? data_0)
		);
	(data_3, data_4, data_5, data_6) = node_000002(
			(0 bufferfby? data_4),
			(0 bufferfby? ((buffer data_2) when? 2))
		);
	data_7 = node_000003(
			(0 bufferfby? ((buffer data_5) when? 6))
		);
	data_10 = node_000004(
			buffer (current?(2, 0, (0 bufferfby? data_3))),
			(0 bufferfby? data_1)
		);
	data_8 = node_000005(0 bufferfby? data_7);
	data_11 = buffer node_000006(
			buffer current?(3, 0, buffer data_8),
			buffer (data_6 when? 2)
		);
	data_11B = current?(4, 0, (0 bufferfby? data_11));
tel

