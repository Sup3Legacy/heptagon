
node lent<<n :int>>() returns (y :int)
let
  () = Do.stuff(n*20);
  y = 1 fby (y + 1);
tel


node rapide<<n :int>>() returns (last z : int = 0; cpt : int)
var big_step :bool;
let
  cpt = Std.mod_counter<<n>>();
  big_step = (cpt = 0);
  switch big_step
  | true
    var r : future int;
    do
      r = async lent<<n>>();
      z = !(async 0 fby r);
  | false do
      () = Do.stuff(20);
  end
tel


node main() returns(r,c :int)
let
  (r,c) = rapide<<5>>();
tel
