const stuff : int = 20
const n : int = 3

node mod_counter<<n :int>>() = (cpt :int)
let
  reset
    cpt = 0 fby (cpt + 1)
  every (false fby (cpt = n-1))
tel

node lent() returns (y :int)
var t :int;
let
  t = Do.stuffi((n-1)*stuff);
  y = 1 fby (y + 1 + t);
tel


node rapide() returns (cpt : int)
var big_step :bool; last z : int = 0;
let
  cpt = inlined mod_counter<<n>>();
  big_step = (cpt = 0);
  switch big_step
  | true
    var r : future int;
    do
      r = async<<10>> lent();
      z = !(async 0 fby r);
  | false do
      z = last z + Do.stuffi(stuff);
  end;
tel


node main() returns(c : int)
let
  c = rapide();
tel
