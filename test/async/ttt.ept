open Iostream

node f() returns (c : bool; x : int on c)
let
  c = true;
  x = 0;
tel

unsafe node force1() returns ()
var am, ay : future int;
    ac : future bool;
let
  am = async 0 fby ay;
  (ac, ay) = async f();
  () = printf("%d", !am);
tel

node force2 () returns
  (am : future int; ac : future bool)
var ay : future int;
let
  am = async 0 fby ay;
  (ac, ay) = async f();
tel

node equiv_pointeau(x : int) returns (y : int)
var am, ay : future int; ac : future bool;
let
  am = async 0 fby ay;
  (ac, ay) = async f();
  y = merge !ac (!am) (x whenot !ac);
tel
